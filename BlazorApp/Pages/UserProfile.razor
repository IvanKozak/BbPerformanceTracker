@page "/profile/{id}"

@using ClassLibrary.DataRepositories
@using ClassLibrary.Models
@inject IUserRepository userRepo;
@inject IShootingDrillRepository drillRepo;
@inject IThreeOnThreeMatchRepository matchRepo;
@inject NavigationManager navManager;

<div class="row">
    <div class="col-md-auto">
        <ShootingDrillSummary Drills="shootingDrills" />
    </div>
    <div class="col-md-auto">
        <ThreeOnThreeMatchesSummary Matches="matches" />
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col-auto">
            <h2>Shooting drill records</h2>
            <Virtualize Items="shootingDrills" Context="drill">
                <ShootingDrillTab shootingDrill="drill" />
            </Virtualize>
        </div>
        <div class="col-auto">
            <h2>3x3 records</h2>
            <Virtualize Items="matches" Context="match">
                <ThreeOnThreeMatchTab match="match" />
            </Virtualize>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Id { get; set; } = string.Empty;
    private User? user;
    private List<ShootingDrill> shootingDrills = new();
    private List<ThreeOnThreeMatch> matches = new();

    protected override async Task OnInitializedAsync()
    {
        user = await userRepo.Get(Int32.Parse(Id));
        if (user is null)
        {
            navManager.NavigateTo("/");
        }
        shootingDrills = await drillRepo.GetAllFromUser(user!);
        matches = await matchRepo.GetAllFromUser(user!);
    }
}