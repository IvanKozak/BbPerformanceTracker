@page "/"
@using ClientLibrary.Models
@using ClientLibrary.Services
@inject AuthenticationStateProvider authProvider
@inject IUserService userService;


<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

@code{
    private User? loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        await LoadAndVerifyUser();
    }

    private async Task LoadAndVerifyUser()
    {
        var authState = await authProvider.GetAuthenticationStateAsync();
        var objectId = authState.User.Claims.FirstOrDefault(c => c.Type.Contains("objectidentifier"))?.Value;

        if(string.IsNullOrWhiteSpace(objectId) == false)
        {
            loggedInUser = await userService.GetAsync() ?? new();

            var name = authState.User.Claims.FirstOrDefault(c => c.Type.Equals("name"))?.Value;
            var email = authState.User.Claims.FirstOrDefault(c => c.Type.Contains("email"))?.Value;

            var isDirty = false;

            if(objectId != loggedInUser.B2CIdentifier)
            {
                isDirty = true;
                loggedInUser.B2CIdentifier = objectId;
            }

            if(name != loggedInUser.Nickname)
            {
                isDirty = true;
                loggedInUser.Nickname = name;
            }

            if(isDirty)
            {
                if(loggedInUser.Id == 0)
                {
                    await userService.AddAsync(loggedInUser);
                    return;
                }
                await userService.UpdateAsync(loggedInUser);
            }
        }

        
    }
}